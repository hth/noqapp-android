apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }
    implementation 'com.squareup.retrofit2:converter-jackson:2.5.0'
    implementation 'net.danlew:android.joda:2.9.9.3'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.10.10'

    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-alpha4', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'org.mockito:mockito-android:2.23.0'

    testImplementation 'org.mockito:mockito-core:2.25.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.4.2"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.4.2"

    // (Optional) If you also have JUnit 4-based tests
    testImplementation "junit:junit:4.12"
    testImplementation "org.junit.vintage:junit-vintage-engine:5.3.1"
    testImplementation "org.awaitility:awaitility:3.1.6"
}
